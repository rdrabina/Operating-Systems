Po wykonaniu ilości powtórzeń wykonania danych funkcji w bibliotece, która pozwalała na uniknięcie segmentation fault otrzymujemy bardzo małe czasy działania poszczególnych funkcjonalności. Występuje dokładnie to samo zjawisko, co w próbie uruchomienia bibliotek bez optymalizacji. Jest to logiczne, ponieważ optymalizacja kodu powinna działać ta, by skrócić czas w jakim działa program.
W teorii czasy poszczególnych operacji po usprawnieniu programu powinny nieznacznie się różnić od siebie, jednak bardzo nieznacznie. Różnica widoczna byłaby dopiero przy bardzo dużej ilości powtórzeń. Wtedy też ulepszenie wprowadzone przez -Ox miałoby większe znaczenie.

with optymalization 0
test_static
Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


test_shared
Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


test_dynamic

Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


with optymalization 3
test_static
Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


test_shared
Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


test_dynamic

Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


with optymalization s
test_static
Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


test_shared
Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


test_dynamic

Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s



Total time: 	(+0.00) s

User time: 	(+0.00) s

System time: 	(+0.00) s


